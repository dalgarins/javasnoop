package com.aspect.snoop.ui.choose.process;

import com.aspect.snoop.util.ClasspathUtil;
import com.aspect.snoop.util.ReflectionUtil;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.jdesktop.application.Action;

public class SearchMainMethodsView extends javax.swing.JDialog {

	List<ChangeListener> changeListeners = new Vector<ChangeListener>();

    /** Creates new form SearchMainMethodsView */
    public SearchMainMethodsView(java.awt.Frame parent, boolean modal, List<String> classpathList) {
        super(parent, modal);
        initComponents();

		lstSearchMainClasses.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				if (e.getClickCount() == 2) {
					int index = lstSearchMainClasses.locationToIndex(e.getPoint());
					System.out.println("Double clicked on Item " + index);
					select();
				}
			}
		});

		// Get all classes with main() methods in the classpath
		DefaultListModel list = new DefaultListModel();

		String classpathString = Util.convertListToString( classpathList, "," );
		// FIXME: We may want a checkbox to enable scanning of the system
		// classpath too
		System.out.println( "Scanning for main classes in: " + classpathString );
		for ( String clazz : ClasspathUtil.getClasses( classpathString, false ) )
		{
			try
			{
				Class className = Class.forName( clazz );
				if ( ReflectionUtil.hasMainClass( className ) )
					list.addElement( new String( clazz ) );
			}
			catch (ClassNotFoundException e)
			{
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			catch (Error e)
			{
				e.printStackTrace();
				// JOptionPane.showMessageDialog( null, e.getMessage(),
				// "Missing Class", JOptionPane.ERROR_MESSAGE );
			}
		}
		lstSearchMainClasses.setModel( list );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstSearchMainClasses = new javax.swing.JList();
        btnCancel = new javax.swing.JButton();
        btnSelect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        lstSearchMainClasses.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstSearchMainClasses.setName("lstSearchMainClasses"); // NOI18N
        jScrollPane1.setViewportView(lstSearchMainClasses);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.aspect.snoop.JavaSnoop.class).getContext().getActionMap(SearchMainMethodsView.class, this);
        btnCancel.setAction(actionMap.get("cancel")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.aspect.snoop.JavaSnoop.class).getContext().getResourceMap(SearchMainMethodsView.class);
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N

        btnSelect.setAction(actionMap.get("select")); // NOI18N
        btnSelect.setText(resourceMap.getString("btnSelect.text")); // NOI18N
        btnSelect.setName("btnSelect"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancel)
                        .addGap(18, 18, 18)
                        .addComponent(btnSelect)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelect)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SearchMainMethodsView dialog = new SearchMainMethodsView(new javax.swing.JFrame(), true, new ArrayList<String>());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

	void addChangeListener(ChangeListener changeListener) {
		changeListeners.add(changeListener);
	}
	
	@Action
	public void select() {
		for (ChangeListener changeListener : changeListeners) {
			changeListener.stateChanged(new ChangeEvent(lstSearchMainClasses.getSelectedValue()));
		}
		setVisible( false );
	}

	@Action
	public void cancel() {
		setVisible( false );
	}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSelect;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstSearchMainClasses;
    // End of variables declaration//GEN-END:variables

}
